{"version":3,"file":"component---src-pages-index-js-76cd03eb90f7c0c328b5.js","mappings":"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","sources":["webpack://2j-portfolio/./node_modules/clsx/dist/clsx.m.js","webpack://2j-portfolio/./src/components/animate/animate.module.css","webpack://2j-portfolio/./src/components/animate/index.js","webpack://2j-portfolio/./src/components/footer/footer.module.css","webpack://2j-portfolio/./src/components/footer/index.js","webpack://2j-portfolio/./src/components/icons/cross.js","webpack://2j-portfolio/./src/components/icons/menu.js","webpack://2j-portfolio/./src/components/icons/moon.js","webpack://2j-portfolio/./src/components/icons/sun.js","webpack://2j-portfolio/./src/components/nav/nav.module.css","webpack://2j-portfolio/./src/components/nav/index.js","webpack://2j-portfolio/./src/components/waveBorder/index.js","webpack://2j-portfolio/./src/components/waveBorder/waveBorder.module.css","webpack://2j-portfolio/./src/components/cover/index.js","webpack://2j-portfolio/./src/components/cover/cover.module.css","webpack://2j-portfolio/./src/components/description/index.js","webpack://2j-portfolio/./src/components/description/description.module.css","webpack://2j-portfolio/./src/components/projects/project.js","webpack://2j-portfolio/./src/components/projects/projects.module.css","webpack://2j-portfolio/./src/images/projects/connectbbc.png","webpack://2j-portfolio/./src/components/projects/index.js","webpack://2j-portfolio/./node_modules/react-hook-form/dist/index.esm.mjs","webpack://2j-portfolio/./src/components/label/index.js","webpack://2j-portfolio/./src/components/label/label.module.css","webpack://2j-portfolio/./src/components/contactMe/contactMe.module.css","webpack://2j-portfolio/./src/components/contactMe/index.js","webpack://2j-portfolio/./src/pages/index.js","webpack://2j-portfolio/./node_modules/validator/lib/isByteLength.js","webpack://2j-portfolio/./node_modules/validator/lib/isEmail.js","webpack://2j-portfolio/./node_modules/validator/lib/isFQDN.js","webpack://2j-portfolio/./node_modules/validator/lib/isIP.js","webpack://2j-portfolio/./node_modules/validator/lib/util/assertString.js","webpack://2j-portfolio/./node_modules/validator/lib/util/merge.js"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","// extracted by mini-css-extract-plugin\nexport var animation = \"animate-module--animation--c7d71\";\nexport var left = \"animate-module--left--b5f0e\";\nexport var up = \"animate-module--up--815bd\";","import React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as styles from \"./animate.module.css\";\n\nconst Animate = ({ animate = \"up\", children }) => {\n  const wrapperRef = useRef();\n  const animationRef = useRef();\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (!animationRef.current) return;\n\n      if (entry.isIntersecting && entry.intersectionRect.top)\n        animationRef.current.classList.add(styles.animation);\n      else animationRef.current.classList.remove(styles.animation);\n    });\n\n    if (wrapperRef.current) observer.observe(wrapperRef.current);\n  }, [wrapperRef, animationRef]);\n\n  return (\n    <div ref={wrapperRef} className={styles[animate]}>\n      <div ref={animationRef} className={styles.animation}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nAnimate.propTypes = {\n  animate: PropTypes.oneOf([\"up\", \"left\"]),\n  children: PropTypes.node.isRequired,\n};\n\nexport default Animate;\n","// extracted by mini-css-extract-plugin\nexport var footer = \"footer-module--footer--03d8a\";\nexport var icon = \"footer-module--icon--b2977\";\nexport var primaryBackground = \"footer-module--primaryBackground--9cfe0\";\nexport var secondaryBackground = \"footer-module--secondaryBackground--1262f\";","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\nimport * as styles from \"./footer.module.css\";\n\nconst Footer = ({ background }) => (\n  <footer className={clsx(styles.footer, styles[`${background}Background`])}>\n    <div className=\"container\">\n      <a href=\"https://github.com/2JN\">\n        <svg\n          role=\"img\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={styles.icon}\n        >\n          <title>GitHub</title>\n          <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n        </svg>\n      </a>\n      <a href=\"https://www.linkedin.com/in/jose-navas-051243bb\">\n        <svg\n          role=\"img\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={styles.icon}\n        >\n          <title>LinkedIn</title>\n          <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\" />\n        </svg>\n      </a>\n    </div>\n  </footer>\n);\n\nFooter.propTypes = {\n  background: PropTypes.oneOf([\"primary\", \"secondary\"]),\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Cross = () => {\n  return (\n    <svg\n      width=\"120\"\n      height=\"100\"\n      viewBox=\"0 0 120 100\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"Frame 1\">\n        <line id=\"Line 1\" x1=\"4.66648\" y1=\"5.56015\" x2=\"115.228\" y2=\"94.6674\" />\n        <line id=\"Line 2\" x1=\"114.76\" y1=\"5.14361\" x2=\"5.20427\" y2=\"95.4849\" />\n      </g>\n    </svg>\n  );\n};\n\nexport default Cross;\n","import React from \"react\";\n\nconst Menu = () => {\n  return (\n    <svg\n      width=\"120\"\n      height=\"100\"\n      viewBox=\"0 0 120 100\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"Frame 1\">\n        <line id=\"Line 1\" x1=\"4\" y1=\"4\" x2=\"116\" y2=\"4\" />\n        <line id=\"Line 2\" x1=\"4\" y1=\"48\" x2=\"116\" y2=\"48\" />\n        <line id=\"Line 3\" x1=\"4\" y1=\"96\" x2=\"116\" y2=\"96\" />\n      </g>\n    </svg>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\n\nconst Moon = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z\"\n      />\n    </svg>\n  );\n};\n\nexport default Moon;\n","import React from \"react\";\n\nconst Sun = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z\"\n      />\n    </svg>\n  );\n};\n\nexport default Sun;\n","// extracted by mini-css-extract-plugin\nexport var activeLink = \"nav-module--activeLink--01613\";\nexport var fadeIn = \"nav-module--fadeIn--a1725\";\nexport var fadeOut = \"nav-module--fadeOut--d461b\";\nexport var logo = \"nav-module--logo--7c776\";\nexport var menuList = \"nav-module--menuList--99126\";\nexport var mobileList = \"nav-module--mobileList--93cab\";\nexport var mobileMenu = \"nav-module--mobileMenu--b8fd6\";\nexport var nav = \"nav-module--nav--e8b1e\";\nexport var rotateIn = \"nav-module--rotateIn--39ec8\";\nexport var rotateOut = \"nav-module--rotateOut--dd932\";\nexport var scrollDown = \"nav-module--scrollDown--ff647\";\nexport var scrollUp = \"nav-module--scrollUp--c7811\";\nexport var themeButton = \"nav-module--themeButton--ad2d4\";","import React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport clsx from \"clsx\";\n\nimport CrossIcon from \"../icons/cross\";\nimport MenuIcon from \"../icons/menu\";\nimport MoonIcon from \"../icons/moon\";\nimport SunIcon from \"../icons/sun\";\nimport { actions, useThemeContext } from \"../../context/themeContext\";\nimport * as styles from \"./nav.module.css\";\n\nconst elementInViewport = (el) => {\n  const elementTop = el.getBoundingClientRect().top;\n\n  return (\n    elementTop <= (window.innerHeight || document.documentElement.clientHeight)\n  );\n};\n\nconst Nav = () => {\n  const navRef = useRef();\n  const menuRef = useRef();\n  const closeRef = useRef();\n  const previousScrollPosition = useRef(0);\n  const [isOpen, setOpen] = useState(false);\n  const { state, dispatch } = useThemeContext();\n\n  const isScrollingDown = () => {\n    const scrolledPosition = window.scrollY;\n    const isScrollDown = scrolledPosition > previousScrollPosition.current;\n\n    previousScrollPosition.current = scrolledPosition;\n    return isScrollDown;\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      menuRef.current.classList.add(styles.rotateOut);\n      menuRef.current.classList.remove(styles.rotateIn);\n      closeRef.current.classList.add(styles.rotateIn);\n      closeRef.current.classList.remove(styles.rotateOut);\n    } else {\n      menuRef.current.classList.add(styles.rotateIn);\n      menuRef.current.classList.remove(styles.rotateOut);\n      closeRef.current.classList.add(styles.rotateOut);\n      closeRef.current.classList.remove(styles.rotateIn);\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (!navRef.current) return;\n\n      if (elementInViewport(navRef.current)) {\n        if (isScrollingDown()) {\n          navRef.current.classList.add(styles.scrollDown);\n          navRef.current.classList.remove(styles.scrollUp);\n\n          setOpen(false);\n        } else {\n          navRef.current.classList.add(styles.scrollUp);\n          navRef.current.classList.remove(styles.scrollDown);\n        }\n      } else {\n        navRef.current.classList.remove(styles.scrollUp);\n        navRef.current.classList.remove(styles.scrollDown);\n      }\n    });\n  }, [navRef]);\n\n  const onMenuClick = () => {\n    setOpen((open) => !open);\n  };\n\n  const onThemeBtnClick = () => {\n    dispatch({ type: actions.DARK_MODE, payload: !state.darkMode });\n  };\n\n  return (\n    <nav ref={navRef} className={styles.nav}>\n      <div className=\"container\">\n        <a href=\"/\" className={styles.logo}>\n          2J\n        </a>\n\n        <button className={styles.themeButton} onClick={onThemeBtnClick}>\n          {state.darkMode ? <SunIcon /> : <MoonIcon />}\n        </button>\n\n        <ul className={styles.menuList}>\n          <li>\n            <Link to=\"/about\" activeClassName={styles.activeLink}>\n              About\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/skills\" activeClassName={styles.activeLink}>\n              Skills\n            </Link>\n          </li>\n          <li>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a href=\"#\" aria-disabled=\"true\">\n              Projects\n            </a>\n          </li>\n          <li>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a href=\"#\" aria-disabled=\"true\">\n              Contact\n            </a>\n          </li>\n        </ul>\n\n        <div className={styles.mobileMenu}>\n          <button onClick={onMenuClick}>\n            <div ref={menuRef}>\n              <MenuIcon />\n            </div>\n            <div ref={closeRef}>\n              <CrossIcon />\n            </div>\n          </button>\n        </div>\n        <ul\n          className={clsx(styles.mobileList, {\n            [styles.fadeIn]: isOpen,\n            [styles.fadeOut]: !isOpen,\n          })}\n        >\n          <li>\n            <Link to=\"/about\" activeClassName={styles.activeLink}>\n              About\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/skills\" activeClassName={styles.activeLink}>\n              Skills\n            </Link>\n          </li>\n          <li>\n            <a href=\"#\" aria-disabled=\"true\">\n              Projects\n            </a>\n          </li>\n          <li>\n            <a href=\"#\" aria-disabled=\"true\">\n              Contact\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\nimport * as styles from \"./waveBorder.module.css\";\n\nconst WaveBorder = ({ borderColor }) => (\n  <div\n    className={`${styles.waveBorder} ${\n      borderColor === \"top\" ? styles.waveBorderTop : styles.waveBorderBottom\n    }`}\n  >\n    <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\">\n      <path d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98 L500.00,150.00 L0.00,150.00 Z\"></path>\n      <path d=\"M0.00,49.98 C149.99,150.00 349.20,-49.98 500.00,49.98\"></path>\n    </svg>\n  </div>\n);\n\nexport default WaveBorder;\n","// extracted by mini-css-extract-plugin\nexport var waveBorder = \"waveBorder-module--waveBorder--3f1ff\";\nexport var waveBorderBottom = \"waveBorder-module--waveBorderBottom--35248\";\nexport var waveBorderTop = \"waveBorder-module--waveBorderTop--5829d\";","import React from \"react\";\n\nimport * as styles from \"./cover.module.css\";\n\nconst Cover = () => (\n  <header className={styles.cover}>\n    <div className=\"container\">\n      <h4>Jose Navas</h4>\n      <p>Full Stack JavaScript Developer,</p>\n      <p>Passionate Technology Enthusiast</p>\n      <h4>Builder of Responsive and Accessible Websites</h4>\n    </div>\n  </header>\n);\n\nexport default Cover;\n","// extracted by mini-css-extract-plugin\nexport var cover = \"cover-module--cover--fd957\";","import React from \"react\";\n\nimport * as styles from \"./description.module.css\";\nimport Animate from \"../animate\";\n\nconst Description = () => {\n  return (\n    <Animate>\n      <section className={styles.description}>\n        <div className=\"container\">\n          <h2>Hi, I'm Jose Navas</h2>\n\n          <p>\n            I’m a Web Developer from Guatemala. I work remotely as freelance and\n            I can help you to reach your audience and make your business grow.\n          </p>\n\n          <p>\n            I've built websites since 2018, I focus on responsive design,\n            animations and accessibility, combined with digital marketing.\n          </p>\n\n          <div className={styles.btnContainer}>\n            <a href=\"/\" className=\"btn btn-round btn-primary\">\n              MORE ABOUT ME\n            </a>\n          </div>\n        </div>\n      </section>\n    </Animate>\n  );\n};\n\nexport default Description;\n","// extracted by mini-css-extract-plugin\nexport var btnContainer = \"description-module--btnContainer--e9764\";\nexport var description = \"description-module--description--308f9\";","import React from \"react\";\n\nimport Animate from \"../animate\";\nimport * as styles from \"./projects.module.css\";\n\nconst Project = ({\n  animate,\n  name,\n  children,\n  imageSrc,\n  imageAlt,\n  projectLink,\n}) => {\n  return (\n    <article className={styles.project}>\n      <Animate animate={animate}>\n        <a href={projectLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <div className={styles.imgContainer}>\n            <img src={imageSrc} alt={imageAlt} className=\"img-cover\" />\n          </div>\n        </a>\n      </Animate>\n      <Animate>\n        <a href={projectLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <h3>{name}</h3>\n        </a>\n        {children}\n      </Animate>\n    </article>\n  );\n};\n\nexport default Project;\n","// extracted by mini-css-extract-plugin\nexport var imgContainer = \"projects-module--imgContainer--c73f7\";\nexport var project = \"projects-module--project--f76a0\";\nexport var projects = \"projects-module--projects--56e49\";","export default __webpack_public_path__ + \"static/connectbbc-8f250c7da0feaa3b42e9b0cce20bd8e9.png\";","import React from \"react\";\n\nimport Project from \"./project\";\nimport Animate from \"../animate\";\nimport * as styles from \"./projects.module.css\";\nimport connectBbc from \"../../images/projects/connectbbc.png\";\n\nconst Projects = () => {\n  return (\n    <section className={`${styles.projects}`}>\n      <div className=\"container\">\n        <Animate>\n          <h2>Featured Projects</h2>\n\n          <p>\n            Some of them made for the Web, others made as for mobile apps, all\n            of them developed to reach the client.\n          </p>\n        </Animate>\n\n        <Project\n          name=\"Connect\"\n          animate=\"left\"\n          imageSrc={connectBbc}\n          imageAlt=\"connect bbc\"\n          projectLink={\"https://www.connectbbc.com\"}\n        >\n          <p>\n            I worked on this project when it was on an early stage, the website\n            is able to make appointments for rides, it includes a functional\n            map.\n          </p>\n          <ul>\n            <li>Nextjs</li>\n            <li>Bootstrap</li>\n            <li>Nodejs</li>\n          </ul>\n        </Project>\n      </div>\n    </section>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (data instanceof Set) {\n        copy = new Set(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : {};\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\n    if (!path || !isObject(obj)) {\n        return defaultValue;\n    }\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n    return isUndefined(result) || result === obj\n        ? isUndefined(obj[path])\n            ? defaultValue\n            : obj[path]\n        : result;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React.createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => !name ||\n    !signalName ||\n    name === signalName ||\n    convertToArrayPayload(name).some((currentName) => currentName &&\n        (exact\n            ? currentName === signalName\n            : currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n    const _props = React.useRef(props);\n    _props.current = props;\n    React.useEffect(() => {\n        const subscription = !props.disabled &&\n            _props.current.subject &&\n            _props.current.subject.subscribe({\n                next: _props.current.next,\n            });\n        return () => {\n            subscription && subscription.unsubscribe();\n        };\n    }, [props.disabled]);\n}\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React.useState(control._formState);\n    const _mounted = React.useRef(true);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        next: (value) => _mounted.current &&\n            shouldSubscribeByName(_name.current, value.name, exact) &&\n            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\n            updateFormState({\n                ...control._formState,\n                ...value,\n            }),\n        subject: control._subjects.state,\n    });\n    React.useEffect(() => {\n        _mounted.current = true;\n        _localProxyFormState.current.isValid && control._updateValid(true);\n        return () => {\n            _mounted.current = false;\n        };\n    }, [control]);\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        subject: control._subjects.values,\n        next: (formState) => {\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n            }\n        },\n    });\n    const [value, updateValue] = React.useState(control._getWatch(name, defaultValue));\n    React.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n    return object;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, disabled, control = methods.control, shouldUnregister } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n    });\n    const _registerProps = React.useRef(control.register(name, {\n        ...props.rules,\n        value,\n    }));\n    _registerProps.current = control.register(name, props.rules);\n    React.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    React.useEffect(() => {\n        if (get(control._fields, name)) {\n            control._updateDisabledField({\n                disabled,\n                fields: control._fields,\n                name,\n            });\n        }\n    }, [disabled, name, control]);\n    return {\n        field: {\n            name,\n            value,\n            ...(isBoolean(disabled) ? { disabled } : {}),\n            onChange: React.useCallback((event) => _registerProps.current.onChange({\n                target: {\n                    value: getEventValue(event),\n                    name: name,\n                },\n                type: EVENTS.CHANGE,\n            }), [name]),\n            onBlur: React.useCallback(() => _registerProps.current.onBlur({\n                target: {\n                    value: get(control._formValues, name),\n                    name: name,\n                },\n                type: EVENTS.BLUR,\n            }), [name, control]),\n            ref: (elm) => {\n                const field = get(control._fields, name);\n                if (field && elm) {\n                    field._f.ref = {\n                        focus: () => elm.focus(),\n                        select: () => elm.select(),\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\n                        reportValidity: () => elm.reportValidity(),\n                    };\n                }\n            },\n        },\n        formState,\n        fieldState: Object.defineProperties({}, {\n            invalid: {\n                enumerable: true,\n                get: () => !!get(formState.errors, name),\n            },\n            isDirty: {\n                enumerable: true,\n                get: () => !!get(formState.dirtyFields, name),\n            },\n            isTouched: {\n                enumerable: true,\n                get: () => !!get(formState.touchedFields, name),\n            },\n            error: {\n                enumerable: true,\n                get: () => get(formState.errors, name),\n            },\n        }),\n    };\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = React.useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            for (const name of control._names.mount) {\n                formData.append(name, get(data, name));\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(action, {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType ? { 'Content-Type': encType } : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    React.useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (React.createElement(React.Fragment, null, render({\n        submit,\n    }))) : (React.createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f && callback(_f.name)) {\n                if (_f.ref.focus) {\n                    _f.ref.focus();\n                    break;\n                }\n                else if (_f.refs && _f.refs[0].focus) {\n                    _f.refs[0].focus();\n                    break;\n                }\n            }\n            else if (isObject(currentField)) {\n                focusFieldBy(currentField, callback);\n            }\n        }\n    }\n};\n\nvar generateId = () => {\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = compact(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMessage = (value) => isString(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabled) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nfunction append(data, value) {\n    return [...data, ...convertToArrayPayload(value)];\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nfunction prepend(data, value) {\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React.useRef(fields);\n    const _name = React.useRef(name);\n    const _actioned = React.useRef(false);\n    _name.current = name;\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    props.rules &&\n        control.register(name, props.rules);\n    useSubscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === _name.current || !fieldArrayName) {\n                const fieldValues = get(values, _name.current);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n        subject: control._subjects.array,\n    });\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._updateFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append$1 = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = append(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, append, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend$1 = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prepend(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, prepend, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted)) {\n            if (control._options.resolver) {\n                control._executeSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field && field._f) {\n                    validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.values.next({\n            name,\n            values: { ...control._formValues },\n        });\n        control._names.focus &&\n            focusFieldBy(control._fields, (key) => !!key && key.startsWith(control._names.focus || ''));\n        control._names.focus = '';\n        control._updateValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    React.useEffect(() => {\n        !get(control._formValues, name) && control._updateFieldArray(name);\n        return () => {\n            (control._options.shouldUnregister || shouldUnregister) &&\n                control.unregister(name);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [updateValues, name, control]),\n        move: React.useCallback(move, [updateValues, name, control]),\n        prepend: React.useCallback(prepend$1, [updateValues, name, control]),\n        append: React.useCallback(append$1, [updateValues, name, control]),\n        remove: React.useCallback(remove, [updateValues, name, control]),\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\n        update: React.useCallback(update, [updateValues, name, control]),\n        replace: React.useCallback(replace, [updateValues, name, control]),\n        fields: React.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\nfunction createSubject() {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        return;\n    }\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}, flushRootRender) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        errors: {},\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    const _subjects = {\n        values: createSubject(),\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _updateValid = async (shouldUpdateValid) => {\n        if (_proxyFormState.isValid || shouldUpdateValid) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _executeSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (value) => _proxyFormState.isValidating &&\n        _subjects.state.next({\n            isValidating: value,\n        });\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if (_proxyFormState.touchedFields &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _updateValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!isBlurEvent || shouldDirty) {\n            if (_proxyFormState.isDirty) {\n                isPreviousDirty = _formState.isDirty;\n                _formState.isDirty = output.isDirty = _getDirty();\n                shouldUpdateField = isPreviousDirty !== output.isDirty;\n            }\n            const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n            isPreviousDirty = get(_formState.dirtyFields, name);\n            isCurrentFieldPristine\n                ? unset(_formState.dirtyFields, name)\n                : set(_formState.dirtyFields, name, true);\n            output.dirtyFields = _formState.dirtyFields;\n            shouldUpdateField =\n                shouldUpdateField ||\n                    (_proxyFormState.dirtyFields &&\n                        isPreviousDirty !== !isCurrentFieldPristine);\n        }\n        if (isBlurEvent) {\n            const isPreviousFieldTouched = get(_formState.touchedFields, name);\n            if (!isPreviousFieldTouched) {\n                set(_formState.touchedFields, name, isBlurEvent);\n                output.touchedFields = _formState.touchedFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        (_proxyFormState.touchedFields &&\n                            isPreviousFieldTouched !== isBlurEvent);\n            }\n        }\n        shouldUpdateField && shouldRender && _subjects.state.next(output);\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = _proxyFormState.isValid &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (props.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(props.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n        _updateIsValidating(false);\n    };\n    const _executeSchema = async (name) => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _executeSchema(names);\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                fieldValue &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\n        !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.length > 1\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                                (checkboxRef.checked = Array.isArray(fieldValue)\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                    : fieldValue === checkboxRef.value))\n                            : fieldReference.refs[0] &&\n                                (fieldReference.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.values.next({\n                            name,\n                            values: { ..._formValues },\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            const fieldValue = value[fieldKey];\n            const fieldName = `${name}.${fieldKey}`;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                !isPrimitive(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: { ..._formValues },\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState });\n        _subjects.values.next({\n            name,\n            values: { ..._formValues },\n        });\n        !_state.mount && flushRootRender();\n    };\n    const onChange = async (event) => {\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = getCurrentFieldValue();\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                field._f.onBlur && field._f.onBlur(event);\n                delayErrorCallback && delayErrorCallback(0);\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.values.next({\n                    name,\n                    type: event.type,\n                    values: { ..._formValues },\n                });\n            if (shouldSkipValidation) {\n                _proxyFormState.isValid && _updateValid();\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            _updateIsValidating(true);\n            if (_options.resolver) {\n                const { errors } = await _executeSchema([name]);\n                const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                error = errorLookupResult.error;\n                name = errorLookupResult.name;\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                isFieldValueUpdated =\n                    Number.isNaN(fieldValue) ||\n                        fieldValue === get(_formValues, name, fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        _updateIsValidating(true);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _updateValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n            isValidating: false,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            focusFieldBy(_fields, (key) => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ..._defaultValues,\n            ...(_state.mount ? _formValues : {}),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n        error: get((formState || _formState).errors, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, {\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.values.subscribe({\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.values.next({\n            values: { ..._formValues },\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _updateValid();\n    };\n    const _updateDisabledField = ({ disabled, name, field, fields, }) => {\n        if (isBoolean(disabled)) {\n            const value = disabled\n                ? undefined\n                : get(_formValues, name, getFieldValue(field ? field._f : get(fields, name)._f));\n            set(_formValues, name, value);\n            updateTouchAndDirty(name, value, false, false, true);\n        }\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        if (field) {\n            _updateDisabledField({\n                field,\n                disabled: options.disabled,\n                name,\n            });\n        }\n        else {\n            updateValidAndValue(name, true, options.value);\n        }\n        return {\n            ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        focusFieldBy(_fields, (key) => key && get(_formState.errors, key), _names.mount);\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _executeSchema();\n            _formState.errors = errors;\n            fieldValues = values;\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            await onValid(fieldValues, e);\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors),\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, get(_defaultValues, name));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, options.defaultValue);\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, get(_defaultValues, name))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _updateValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const values = formValues && !isEmptyObject(formValues)\n            ? cloneUpdatedValues\n            : _defaultValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n                for (const fieldName of _names.mount) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                _fields = {};\n            }\n            _formValues = props.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.values.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        !_state.mount && flushRootRender();\n        _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n        _state.watch = !!props.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : !!(keepStateOptions.keepDefaultValues &&\n                    !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirtyValues\n                ? _formState.dirtyFields\n                : keepStateOptions.keepDefaultValues && formValues\n                    ? getDirtyFields(_defaultValues, formValues)\n                    : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n                ? _formState.isSubmitSuccessful\n                : false,\n            isSubmitting: false,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect && fieldRef.select();\n            }\n        }\n    };\n    const _updateFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    return {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _executeSchema,\n            _getWatch,\n            _getDirty,\n            _updateValid,\n            _removeUnmounted,\n            _updateFieldArray,\n            _updateDisabledField,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _updateFormState,\n            _subjects,\n            _proxyFormState,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            set _formState(value) {\n                _formState = value;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React.useRef();\n    const _values = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        errors: {},\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        _formControl.current = {\n            ...createFormControl(props, () => updateFormState((formState) => ({ ...formState }))),\n            formState,\n        };\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useSubscribe({\n        subject: control._subjects.state,\n        next: (value) => {\n            if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n                updateFormState({ ...control._formState });\n            }\n        },\n    });\n    React.useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, control._options.resetOptions);\n            _values.current = props.values;\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [props.values, control]);\n    React.useEffect(() => {\n        if (!control._state.mount) {\n            control._updateValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, Form, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport * as styles from \"./label.module.css\";\n\nconst Label = ({ label, htmlFor, children, value }) => {\n  let labelClassName = \"\";\n\n  if (value !== undefined && value !== null && value !== \"\")\n    labelClassName = styles.nonEmpty;\n\n  return (\n    <div className={styles.labelContainer}>\n      <label htmlFor={htmlFor} className={labelClassName}>\n        {label}\n      </label>\n      {children}\n    </div>\n  );\n};\n\nLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  htmlFor: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  value: PropTypes.any,\n};\n\nexport default Label;\n","// extracted by mini-css-extract-plugin\nexport var labelContainer = \"label-module--labelContainer--3e629\";\nexport var nonEmpty = \"label-module--nonEmpty--79f62\";","// extracted by mini-css-extract-plugin\nexport var contactMe = \"contactMe-module--contactMe--07e44\";\nexport var inputContainer = \"contactMe-module--inputContainer--e0b2f\";","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport isEmail from \"validator/lib/isEmail\";\n\nimport Label from \"../label\";\nimport Animate from \"../animate\";\nimport * as styles from \"./contactMe.module.css\";\n\nconst ContactMe = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const [{ data, loading }, setState] = useState({\n    data: {},\n    loading: false,\n    error: false,\n  });\n\n  const onSubmit = (formData) => {\n    setState({ data, error: false, loading: true });\n\n    fetch(\"https://formspree.io/f/mzbjqvnr\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n      .then((data) => {\n        reset();\n\n        setState({\n          loading: false,\n          error: false,\n          data,\n        });\n      })\n      .catch((error) => {\n        setState({\n          loading: false,\n          error,\n          data,\n        });\n      });\n  };\n\n  const showForm = (e) => {\n    if (e.type === \"keydown\" && e.keyCode !== 13) return;\n\n    setState({ data: {}, loading: false, error: false });\n  };\n\n  return (\n    <section className={`${styles.contactMe}`}>\n      <div className=\"container\">\n        {data.ok ? (\n          <Animate>\n            <h2>Thank You!</h2>\n            <p>\n              I'll writte you back in no time, thanks again for taking your time\n              to contact me.\n            </p>\n\n            <p>\n              Wanted to say something else?{\" \"}\n              <span\n                role=\"button\"\n                tabIndex={0}\n                onClick={showForm}\n                onKeyDown={showForm}\n              >\n                Click Here\n              </span>\n            </p>\n          </Animate>\n        ) : (\n          <>\n            <Animate>\n              <h2>Contact</h2>\n            </Animate>\n            <Animate>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <fieldset aria-disabled={loading}>\n                  <div className={styles.inputContainer}>\n                    <Label htmlFor=\"name\" label=\"Name:\" value={watch(\"name\")}>\n                      <input\n                        id=\"name\"\n                        {...register(\"name\", {\n                          required: {\n                            value: true,\n                            message: \"Don't forget your name\",\n                          },\n                        })}\n                      />\n                    </Label>\n                    {errors.name && (\n                      <span className=\"errorMessage\">\n                        {errors.name.message}\n                      </span>\n                    )}\n                  </div>\n                  <div className={styles.inputContainer}>\n                    <Label\n                      htmlFor=\"email\"\n                      label=\"Email:\"\n                      value={watch(\"email\")}\n                    >\n                      <input\n                        id=\"email\"\n                        type=\"email\"\n                        {...register(\"email\", {\n                          required: {\n                            value: true,\n                            message: \"Don't forget your email\",\n                          },\n                          validate: (value) => {\n                            return (\n                              isEmail(value) ||\n                              \"This doesn't look like an email\"\n                            );\n                          },\n                        })}\n                      />\n                    </Label>\n                    {errors.email && (\n                      <span className=\"errorMessage\">\n                        {errors.email.message}\n                      </span>\n                    )}\n                  </div>\n                  <div className={styles.inputContainer}>\n                    <Label\n                      htmlFor=\"subject\"\n                      label=\"Subject:\"\n                      value={watch(\"subject\")}\n                    >\n                      <input id=\"subject\" {...register(\"subject\")} />\n                    </Label>\n                  </div>\n                  <div className={styles.inputContainer}>\n                    <Label\n                      htmlFor=\"message\"\n                      label=\"Message:\"\n                      value={watch(\"message\")}\n                    >\n                      <textarea\n                        id=\"message\"\n                        maxLength=\"1000\"\n                        {...register(\"message\")}\n                      />\n                    </Label>\n                    {errors.message && (\n                      <span className=\"errorMessage\">\n                        {errors.message.message}\n                      </span>\n                    )}\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-secondary\">\n                    SEND{loading && \"ING\"}\n                  </button>\n                </fieldset>\n              </form>\n            </Animate>\n          </>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default ContactMe;\n","import React from \"react\";\n\nimport Cover from \"../components/cover\";\nimport Nav from \"../components/nav\";\nimport Description from \"../components/description\";\nimport Projects from \"../components/projects\";\nimport WaveBorder from \"../components/waveBorder\";\nimport ContactMe from \"../components/contactMe\";\nimport Footer from \"../components/footer\";\n\nconst IndexPage = () => {\n  return (\n    <main>\n      <Cover />\n      <Nav />\n      <Description />\n      <WaveBorder borderColor={\"top\"} />\n      <Projects />\n      <WaveBorder />\n      <ContactMe />\n      <WaveBorder borderColor={\"top\"} />\n      <Footer background=\"secondary\" />\n    </main>\n  );\n};\n\nexport default IndexPage;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isByteLength;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isByteLength = _interopRequireDefault(require(\"./isByteLength\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  allow_underscores: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true,\n  blacklisted_chars: '',\n  ignore_max_length: false,\n  host_blacklist: [],\n  host_whitelist: []\n};\n/* eslint-disable max-len */\n\n/* eslint-disable no-control-regex */\n\nvar splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar gmailUserPart = /^[a-z\\d]+$/;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A1-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\nvar defaultMaxEmailLength = 254;\n/* eslint-enable max-len */\n\n/* eslint-enable no-control-regex */\n\n/**\n * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n * @param {String} display_name\n */\n\nfunction validateDisplayName(display_name) {\n  var display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1'); // display name with only spaces is not valid\n\n  if (!display_name_without_quotes.trim()) {\n    return false;\n  } // check whether display name contains illegal character\n\n\n  var contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n\n  if (contains_illegal) {\n    // if contains illegal characters,\n    // must to be enclosed in double-quotes, otherwise it's not a valid display name\n    if (display_name_without_quotes === display_name) {\n      return false;\n    } // the quotes in display name must start with character symbol \\\n\n\n    var all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n\n    if (!all_start_with_back_slash) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isEmail(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(splitNameAddress);\n\n    if (display_email) {\n      var display_name = display_email[1]; // Remove display name and angle brackets to get email address\n      // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n\n      str = str.replace(display_name, '').replace(/(^<|>$)/g, ''); // sometimes need to trim the last space to get the display name\n      // because there may be a space between display name and email address\n      // eg. myname <address@gmail.com>\n      // the display name is `myname` instead of `myname `, so need to trim the last space\n\n      if (display_name.endsWith(' ')) {\n        display_name = display_name.slice(0, -1);\n      }\n\n      if (!validateDisplayName(display_name)) {\n        return false;\n      }\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n    return false;\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var lower_domain = domain.toLowerCase();\n\n  if (options.host_blacklist.includes(lower_domain)) {\n    return false;\n  }\n\n  if (options.host_whitelist.length > 0 && !options.host_whitelist.includes(lower_domain)) {\n    return false;\n  }\n\n  var user = parts.join('@');\n\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase(); // Removing sub-address from username before gmail validation\n\n    var username = user.split('+')[0]; // Dots are not included in gmail length restriction\n\n    if (!(0, _isByteLength.default)(username.replace(/\\./g, ''), {\n      min: 6,\n      max: 30\n    })) {\n      return false;\n    }\n\n    var _user_parts = username.split('.');\n\n    for (var i = 0; i < _user_parts.length; i++) {\n      if (!gmailUserPart.test(_user_parts[i])) {\n        return false;\n      }\n    }\n  }\n\n  if (options.ignore_max_length === false && (!(0, _isByteLength.default)(user, {\n    max: 64\n  }) || !(0, _isByteLength.default)(domain, {\n    max: 254\n  }))) {\n    return false;\n  }\n\n  if (!(0, _isFQDN.default)(domain, {\n    require_tld: options.require_tld,\n    ignore_max_length: options.ignore_max_length,\n    allow_underscores: options.allow_underscores\n  })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n\n    if (!(0, _isIP.default)(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n\n      var noBracketdomain = domain.slice(1, -1);\n\n      if (noBracketdomain.length === 0 || !(0, _isIP.default)(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n  var user_parts = user.split('.');\n\n  for (var _i = 0; _i < user_parts.length; _i++) {\n    if (!pattern.test(user_parts[_i])) {\n      return false;\n    }\n  }\n\n  if (options.blacklisted_chars) {\n    if (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false,\n  ignore_max_length: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!options.allow_numeric_tld && !/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63 && !options.ignore_max_length) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    return IPv4AddressRegExp.test(str);\n  }\n\n  if (version === '6') {\n    return IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"],"names":["r","e","t","f","n","Array","isArray","length","arguments","animation","left","up","_ref","animate","children","wrapperRef","useRef","animationRef","useEffect","observer","IntersectionObserver","_ref2","entry","current","isIntersecting","intersectionRect","top","classList","add","styles","remove","observe","React","ref","className","footer","icon","primaryBackground","secondaryBackground","background","clsx","href","role","viewBox","xmlns","d","Cross","width","height","fill","stroke","id","x1","y1","x2","y2","Menu","Moon","strokeWidth","strokeLinecap","strokeLinejoin","Sun","activeLink","rotateIn","rotateOut","scrollDown","scrollUp","Nav","navRef","menuRef","closeRef","previousScrollPosition","isOpen","setOpen","useState","state","dispatch","useThemeContext","window","addEventListener","getBoundingClientRect","innerHeight","document","documentElement","clientHeight","isScrollingDown","scrolledPosition","scrollY","isScrollDown","onClick","onThemeBtnClick","type","actions","DARK_MODE","payload","darkMode","SunIcon","MoonIcon","Link","to","activeClassName","onMenuClick","open","MenuIcon","CrossIcon","borderColor","preserveAspectRatio","Cover","Description","Animate","name","imageSrc","imageAlt","projectLink","target","rel","src","alt","Projects","Project","connectBbc","isCheckBoxInput","element","isDateObject","value","Date","isNullOrUndefined","isObjectType","isObject","getEventValue","event","checked","isNameInFieldArray","names","has","substring","search","getNodeParentName","isPlainObject","tempObject","prototypeCopy","constructor","prototype","hasOwnProperty","isWeb","HTMLElement","cloneObject","data","copy","Set","Blob","FileList","key","compact","filter","Boolean","isUndefined","val","undefined","get","obj","path","defaultValue","result","split","reduce","isBoolean","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","getProxyFormState","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","Object","defineProperty","_key","_proxyFormState","isEmptyObject","keys","shouldRenderFormState","formStateData","updateFormState","find","convertToArrayPayload","useSubscribe","props","_props","subscription","disabled","subject","subscribe","next","unsubscribe","isString","generateWatchOutput","_names","formValues","isGlobal","watch","map","fieldName","watchAll","isKey","test","stringToPath","input","replace","set","object","index","tempPath","lastIndex","newValue","objValue","isNaN","appendErrors","validateAllFieldCriteria","errors","message","types","focusFieldBy","fields","callback","fieldsNames","field","_f","currentField","focus","refs","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","some","watchName","startsWith","slice","updateFieldArrayRootError","error","fieldArrayErrors","isFileInput","isFunction","isHTMLElement","owner","ownerDocument","defaultView","isMessage","isRadioInput","isRegex","RegExp","defaultResult","isValid","validResult","getCheckboxValue","options","values","option","attributes","defaultReturn","getRadioValue","previous","getValidateError","every","getValueAndMessage","validationData","validateField","async","shouldUseNativeValidation","isFieldArray","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","reportValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","valueNumber","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","unset","paths","childObject","updatePath","baseGet","isEmptyArray","createSubject","_observers","observers","push","o","isPrimitive","deepEqual","object1","object2","getTime","keys1","keys2","val1","includes","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","setValueAs","NaN","getFieldValue","files","selectedOptions","getResolverOptions","_fields","criteriaMode","getRuleValue","rule","source","hasValidation","schemaErrorLookup","join","foundError","pop","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","shouldFocusError","createFormControl","flushRootRender","delayErrorCallback","_options","_formState","submitCount","isDirty","isLoading","isValidating","isSubmitting","isSubmitSuccessful","touchedFields","dirtyFields","_formValues","shouldUnregister","_state","action","unMount","array","timer","_subjects","shouldCaptureDirtyFields","resetOptions","keepDirtyValues","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","_updateValid","shouldUpdateValid","resolver","_executeSchema","executeBuiltInValidation","_updateIsValidating","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","_getDirty","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","delayError","updateErrors","wait","clearTimeout","setTimeout","updatedFormState","context","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","getValues","_getWatch","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","isFieldValueUpdated","shouldSkipValidation","deps","watched","previousErrorLookupResult","errorLookupResult","Number","fieldNames","executeSchemaAndUpdateState","Promise","shouldFocus","getFieldState","invalid","setError","unregister","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","_updateDisabledField","register","disabledIsDefined","progressive","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","preventDefault","persist","fieldValues","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","keepIsSubmitSuccessful","_removeUnmounted","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","argA","argB","_getFieldArray","_resetDefaultValues","then","_updateFormState","resetField","clearErrors","inputName","setFocus","shouldSelect","select","label","htmlFor","labelClassName","inputContainer","ContactMe","_formControl","_values","useForm","loading","setState","showForm","keyCode","ok","tabIndex","onKeyDown","formData","fetch","body","JSON","stringify","headers","Accept","catch","Label","assign","isEmail","email","IndexPage","WaveBorder","Footer","exports","str","_assertString","default","_typeof","len","encodeURI","__esModule","Symbol","iterator","module","_merge","default_email_options","require_display_name","allow_display_name","display_email","splitNameAddress","display_name","endsWith","display_name_without_quotes","trim","validateDisplayName","ignore_max_length","defaultMaxEmailLength","parts","domain","lower_domain","toLowerCase","host_blacklist","host_whitelist","user","domain_specific_validation","username","_isByteLength","_user_parts","i","gmailUserPart","_isFQDN","require_tld","allow_underscores","allow_ip_domain","_isIP","noBracketdomain","allow_utf8_local_part","quotedEmailUserUtf8","quotedEmailUser","emailUserUtf8Part","emailUserPart","user_parts","_i","blacklisted_chars","concat","_interopRequireDefault","default_fqdn_options","allow_trailing_dot","allow_wildcard","indexOf","tld","allow_numeric_tld","part","isIP","version","String","IPv4AddressRegExp","IPv6AddressRegExp","IPv4SegmentFormat","IPv4AddressFormat","IPv6SegmentFormat","invalidType","TypeError","defaults"],"sourceRoot":""}